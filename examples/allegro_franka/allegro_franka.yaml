##
#
# This file contains parameters defining an optimization problem where the
# Franka arm with Allegro hand attached manipulates an oversized pen.
#
##

# Initial state
q_init :  [0.0, 0.6, 0.1,-1.8, 1.6, 1.7, 0.0,  # arm joint angles
           0.0, 0.7, 0.7, 0.6,                 # index finger
           0.0, 0.7, 0.7, 0.6,                 # middle finger
           0.0, 1.4, 0.9, 0.6,                 # ring finger
           1.4, 0.2, 0.7, 0.6,                 # thumb
           1.0, 0.0, 0.0, 0.0,                 # ball orientation
           0.79, 0.27, 0.2]                    # ball position

v_init : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0,
          0.0, 0.0, 0.0]

# Target state
q_nom_start : [0.0, 0.6, 0.1,-1.8, 1.6, 1.7, 0.0,
               0.0, 0.7, 0.7, 0.6,
               0.0, 0.7, 0.7, 0.6,
               0.0, 1.4, 0.9, 0.6,
               1.4, 0.2, 0.7, 0.6,
               1.0, 0.0, 0.0, 0.0,
               0.79, 0.27, 0.2]   
q_nom_end : [0.0, 0.6, 0.1,-1.8, 1.6, 1.7, 0.0,
             0.0, 0.7, 0.7, 0.6,
             0.0, 0.7, 0.7, 0.6,
             0.0, 1.4, 0.9, 0.6,
             1.4, 0.2, 0.7, 0.6,
             1.0, 0.0, 0.0, 0.0,
             0.79, 0.27, 0.2]   

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [0.0, 0.6, 0.1,-1.8, 1.6, 1.7, 0.0,
           0.0, 0.7, 0.7, 0.6,
           0.0, 0.7, 0.7, 0.6,
           0.0, 1.4, 0.9, 0.6,
           1.4, 0.2, 0.7, 0.6,
           1.0, 0.0, 0.0, 0.0,
           0.79, 0.27, 0.2]   

# Cost Weights
Qq : [1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2]
Qv : [1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1, 1e-1,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2,
      1e-2, 1e-2, 1e-2]
R : [1e-3, 1e-3, 1e-3, 1e-3, 1e-3, 1e-3, 1e-3,
     1e-1, 1e-1, 1e-1, 1e-1,
     1e-1, 1e-1, 1e-1, 1e-1,
     1e-1, 1e-1, 1e-1, 1e-1,
     1e-1, 1e-1, 1e-1, 1e-1,
     1e2, 1e2, 1e2,
     1e2, 1e2, 1e2]

Qfq : [1e0, 1e0, 1e0, 1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0]
Qfv : [1e0, 1e0, 1e0, 1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0, 1e0,
       1e0, 1e0, 1e0,
       1e0, 1e0, 1e0]

# Problem definition parameters
time_step : 0.05    # Discretization timestep (seconds)
num_steps : 40      # number of timesteps

# Solver parameters
max_iters : 50              # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
tolerances:
  rel_cost_reduction: 0
  abs_cost_reduction: 0
  rel_gradient_along_dq: 0
  abs_gradient_along_dq: 0
  rel_state_change: 0
  abs_state_change: 0
scaling : true
equality_constraints : true
num_threads : 4

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "forward_differences"

# Playback/visualization parameters
play_target_trajectory : true
play_initial_guess : false
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# Contact model parameters. 
contact_stiffness : 500     # normal force stiffness, in N/m
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Amount of smoothing (and therefore force at a distance) to apply when
# computing normal forces. This is equivalent to an analytical version of
# randomized smoothing, assuming that signed distances are drawn from a logistic
# distirbution with the smoothing factor as the scale parameter. Higher values
# mean more smoothing and more force at a distance. 
smoothing_factor : 0.001

# Friction
friction_coefficient : 1.0  # Coefficient of friction.
stiction_velocity: 0.1      # Regularization velocity, in m/s.
