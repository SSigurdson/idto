##
#
# A minimal optimization problem for the air hockey example, for testing only.
#
##

# Initial state, ordered by 
# [pusher_x, pusher_y, pusher_theta, puck_x, puck_y, puck_theta]
q_init : [0.0, 0.0, 0.0, 0.0, 0.5, 0.0]
v_init : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

# Target state
q_nom_start : [0.0, 0.0, 0.0, 0.0, 0.5, 0.0]
q_nom_end : [0.0, 0.0, 0.0, 0.3, 1.0, 1.0]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [0.0, 0.32, 0.0, 0.0, 0.5, 0.0]

# Cost Weights
Qq : [0.0, 0.0, 0.0, 0.1, 0.1, 0.1]
Qv : [0.5, 0.5, 0.5, 0.1, 0.1, 0.1]
R : [0.1, 0.1, 0.1, 1e3, 1e3, 1e3]

Qfq : [0.0, 0.0, 0.0, 10.0, 10.0, 10.0]
Qfv : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]

# Problem definition parameters
time_step : 0.05    # Discretization timestep (seconds)
num_steps : 40      # number of timesteps

# Solver parameters
max_iters : 10              # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
scaling : true
scaling_method : "double_sqrt"
equality_constraints : true
Delta0 : 1e-3
linear_solver : "pentadiagonal_lu"

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "central_differences"

# Playback/visualization parameters
play_target_trajectory : false
play_initial_guess : false
play_optimal_trajectory : false

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : false

# Contact model parameters. 
contact_stiffness : 100     # normal force stiffness, in N/m
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Amount of smoothing (and therefore force at a distance) to apply when
# computing normal forces. This is equivalent to an analytical version of
# randomized smoothing, assuming that signed distances are drawn from a logistic
# distirbution with the smoothing factor as the scale parameter. Higher values
# mean more smoothing and more force at a distance. 
smoothing_factor : 0.001

# Friction
friction_coefficient : 1.0  # Coefficient of friction.
stiction_velocity: 0.01     # Regularization velocity, in m/s.
