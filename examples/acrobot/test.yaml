##
#
# A minimal acrobot swingup problem, for testing purposes only
#
##

# Initial state ([shoulder, elbow])
q_init : [0.0, 0.0]
v_init : [0.0, 0.0]

# Target state
q_nom_start : [3.1415, 0.0]
q_nom_end : [3.1415, 0.0]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [0.0, 0.0]

# Cost Weights. These define diagonal matrices, again with the ordering
# [finger 1, finger 2, spinner]
Qq : [1.0, 1.0]  # Running cost
Qv : [1.0, 1.0]
R : [1e3, 0.1]

Qfq : [100, 100]  # Terminal cost
Qfv : [1.0, 1.0]

# Problem definition parameters
time_step : 0.05   # Discretization timestep (seconds)
num_steps : 40     # number of timesteps

# Solver parameters
max_iters : 10              # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
num_threads : 1

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "forward_differences"

linear_solver: "pentadiagonal_lu"

# Playback/visualization parameters
play_target_trajectory : false
play_initial_guess : false
play_optimal_trajectory : false

# Debugging parameters
verbose : false
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : false

# MPC parameters
mpc : false